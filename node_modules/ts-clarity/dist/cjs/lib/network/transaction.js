"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTransaction = getTransaction;
exports.getMempoolTransaction = getMempoolTransaction;
const transactions_1 = require("@stacks/transactions");
const fetch_js_1 = require("../common/fetch.js");
const request_js_1 = require("./request.js");
async function getTransaction(txid, _options) {
    const options = (0, request_js_1.mergeDefaultExtendedApiRequestOptions)(_options);
    const url = `${options.stacksEndpoint}/extended/v1/tx/${txid.startsWith('0x') ? txid : `0x${txid}`}`;
    const rs = await (0, fetch_js_1.richFetch)(url, {
        timeout: options.timeout,
        fetch: options.fetch,
        retries: options.retries,
        retryDelay: options.retryDelay,
        retryOn: fetch_js_1.retryOnError,
    });
    if (rs.status === 404)
        return null;
    return await rs.json();
}
async function getMempoolTransaction(txid, _options) {
    const options = (0, request_js_1.mergeDefaultNodeApiRequestOptions)(_options);
    const url = `${options.stacksEndpoint}/v2/transactions/unconfirmed/${txid.startsWith('0x') ? txid.substring(2) : txid}`;
    const rs = await (0, fetch_js_1.richFetch)(url, {
        timeout: options.timeout,
        fetch: options.fetch,
        retries: options.retries,
        retryDelay: options.retryDelay,
        retryOn: fetch_js_1.retryOnError,
    });
    if (rs.status === 404)
        return null;
    const { tx, status } = await rs.json();
    if (status !== 'Mempool')
        return null;
    return (0, transactions_1.deserializeTransaction)(tx);
}
//# sourceMappingURL=transaction.js.map