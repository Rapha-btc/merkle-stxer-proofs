"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getContractAbi = getContractAbi;
const fetch_js_1 = require("../common/fetch.js");
const request_js_1 = require("./request.js");
async function getContractAbi(contract, _options) {
    const options = (0, request_js_1.mergeDefaultNodeApiRequestOptions)(_options);
    const [deployer, contractName] = contract.split('.', 2);
    const url = `${options.stacksEndpoint}/v2/contracts/interface/${deployer}/${contractName}`;
    const rs = await (0, fetch_js_1.richFetch)(url, {
        timeout: options.timeout,
        fetch: options.fetch,
        retries: options.retries,
        retryDelay: options.retryDelay,
        retryOn: fetch_js_1.retryOnError,
    });
    if (rs.status === 404) {
        throw new Error(`Contract ${deployer}.${contractName} not found from ${url}`);
    }
    if (rs.status !== 200) {
        throw new Error(`Failed to fetch abi from ${url}, status code: ${rs.status}: ${rs.statusText}`);
    }
    const abi = await rs.json();
    if (_options?.includePrivate !== true) {
        abi.functions = abi.functions.filter((fn) => fn.access !== 'private');
    }
    return abi;
}
//# sourceMappingURL=abi.js.map