import type { ClarityAbiVariable, HexString, TContractPrincipal } from 'clarity-abi';
import { type RequestTimeoutRetryParams } from '../common/fetch.js';
import type { InferReadVariableParameterType, InferVariableType } from './contract.js';
export type ReadVariableRuntimeParameterType = {
    contract: TContractPrincipal;
    stacksEndpoint?: string;
    proof?: boolean;
    indexBlockHash?: HexString | Uint8Array;
} & Omit<RequestTimeoutRetryParams, 'retryOn'>;
export declare function readVariable<Variables extends readonly ClarityAbiVariable[] | readonly unknown[] = readonly ClarityAbiVariable[], VariableName extends string = string>(params: InferReadVariableParameterType<Variables, VariableName> & ReadVariableRuntimeParameterType): Promise<InferVariableType<Variables, VariableName>>;
//# sourceMappingURL=read-variable.d.ts.map