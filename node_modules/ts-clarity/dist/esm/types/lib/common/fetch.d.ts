import fetch from 'cross-fetch';
export type RequestDelayFunction = (attempt: number, error: unknown | null, response: Response | null) => number;
export type RequestRetryOnFunction = (attempt: number, error: unknown | null, response: Response | null) => boolean | Promise<boolean>;
export interface RequestTimeoutRetryParams {
    fetch?: typeof fetch | undefined;
    timeout?: number | undefined;
    retries?: number | undefined;
    retryDelay?: number | RequestDelayFunction | undefined;
    retryOn?: number[] | RequestRetryOnFunction | undefined;
}
export declare function exponentialBackoff(initDelay?: number, maxDelay?: number): RequestDelayFunction;
export declare function retryOnError(_attempt: number, error: unknown | null, response: Response | null): boolean;
export declare function richFetch(url: string | URL, options?: RequestInit & RequestTimeoutRetryParams): Promise<Response>;
//# sourceMappingURL=fetch.d.ts.map