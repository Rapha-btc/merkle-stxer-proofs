import type { ClarityAbiMap, HexString, TContractPrincipal } from 'clarity-abi';
import { type RequestTimeoutRetryParams } from '../common/fetch.js';
import type { InferMapValueType, InferReadMapParameterType } from './contract.js';
export type ReadMapRuntimeParameters = {
    contract: TContractPrincipal;
    stacksEndpoint?: string;
    proof?: boolean;
    indexBlockHash?: HexString | Uint8Array;
} & Omit<RequestTimeoutRetryParams, 'retryOn'>;
export declare function readMap<Maps extends readonly ClarityAbiMap[] | readonly unknown[] = readonly ClarityAbiMap[], MapName extends string = string>(params: InferReadMapParameterType<Maps, MapName> & ReadMapRuntimeParameters): Promise<InferMapValueType<Maps, MapName> | null>;
//# sourceMappingURL=read-map.d.ts.map