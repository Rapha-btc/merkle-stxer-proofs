"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const validation_1 = require("../validation");
describe('Input Validation', () => {
    test('validateTxId accepts valid transaction ID', () => {
        const validTxId = '4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b';
        expect(() => (0, validation_1.validateTxId)(validTxId)).not.toThrow();
    });
    test('validateTxId rejects invalid transaction ID', () => {
        const invalidTxId = 'invalid';
        expect(() => (0, validation_1.validateTxId)(invalidTxId)).toThrow();
    });
    test('validateBlockHeight accepts valid height', () => {
        expect(() => (0, validation_1.validateBlockHeight)(500000)).not.toThrow();
    });
    test('validateBlockHeight rejects negative height', () => {
        expect(() => (0, validation_1.validateBlockHeight)(-1)).toThrow();
    });
    test('validateRPCConfig accepts valid config', () => {
        const validConfig = {
            url: 'http://localhost:8332',
            username: 'user',
            password: 'pass'
        };
        expect(() => (0, validation_1.validateRPCConfig)(validConfig)).not.toThrow();
    });
    test('validateRPCConfig rejects invalid URL', () => {
        const invalidConfig = {
            url: 'invalid-url',
            username: 'user',
            password: 'pass'
        };
        expect(() => (0, validation_1.validateRPCConfig)(invalidConfig)).toThrow();
    });
});
