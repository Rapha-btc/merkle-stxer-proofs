declare const _default: {
    readonly functions: readonly [{
        readonly name: "add-approved-contract";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "new-approved-contract";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "burn";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "sender";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "burn-fixed";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "sender";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "burn-fixed-many";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "senders";
            readonly type: {
                readonly list: {
                    readonly type: {
                        readonly tuple: readonly [{
                            readonly name: "amount";
                            readonly type: "uint128";
                        }, {
                            readonly name: "sender";
                            readonly type: "principal";
                        }];
                    };
                    readonly length: 200;
                };
            };
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: {
                        readonly list: {
                            readonly type: {
                                readonly response: {
                                    readonly ok: "bool";
                                    readonly error: "uint128";
                                };
                            };
                            readonly length: 200;
                        };
                    };
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "mint";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "recipient";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "mint-fixed";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "recipient";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "set-approved-contract";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "owner";
            readonly type: "principal";
        }, {
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "set-contract-owner";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "owner";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "set-decimals";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "new-decimals";
            readonly type: "uint128";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "set-name";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "new-name";
            readonly type: {
                readonly 'string-ascii': {
                    readonly length: 32;
                };
            };
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "set-symbol";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "new-symbol";
            readonly type: {
                readonly 'string-ascii': {
                    readonly length: 10;
                };
            };
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "set-token-uri";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "new-uri";
            readonly type: {
                readonly optional: {
                    readonly 'string-utf8': {
                        readonly length: 256;
                    };
                };
            };
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "transfer";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "sender";
            readonly type: "principal";
        }, {
            readonly name: "recipient";
            readonly type: "principal";
        }, {
            readonly name: "memo";
            readonly type: {
                readonly optional: {
                    readonly buffer: {
                        readonly length: 34;
                    };
                };
            };
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "transfer-fixed";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "sender";
            readonly type: "principal";
        }, {
            readonly name: "recipient";
            readonly type: "principal";
        }, {
            readonly name: "memo";
            readonly type: {
                readonly optional: {
                    readonly buffer: {
                        readonly length: 34;
                    };
                };
            };
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "fixed-to-decimals";
        readonly access: "read_only";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }];
        readonly outputs: {
            readonly type: "uint128";
        };
    }, {
        readonly name: "get-balance";
        readonly access: "read_only";
        readonly args: readonly [{
            readonly name: "who";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-balance-fixed";
        readonly access: "read_only";
        readonly args: readonly [{
            readonly name: "account";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-contract-owner";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "principal";
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-decimals";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-name";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: {
                        readonly 'string-ascii': {
                            readonly length: 32;
                        };
                    };
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-symbol";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: {
                        readonly 'string-ascii': {
                            readonly length: 10;
                        };
                    };
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-token-uri";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: {
                        readonly optional: {
                            readonly 'string-utf8': {
                                readonly length: 256;
                            };
                        };
                    };
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-total-supply";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-total-supply-fixed";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "none";
                };
            };
        };
    }];
    readonly variables: readonly [{
        readonly name: "ERR-NOT-AUTHORIZED";
        readonly type: {
            readonly response: {
                readonly ok: "none";
                readonly error: "uint128";
            };
        };
        readonly access: "constant";
    }, {
        readonly name: "ONE_8";
        readonly type: "uint128";
        readonly access: "constant";
    }, {
        readonly name: "contract-owner";
        readonly type: "principal";
        readonly access: "variable";
    }, {
        readonly name: "token-decimals";
        readonly type: "uint128";
        readonly access: "variable";
    }, {
        readonly name: "token-name";
        readonly type: {
            readonly 'string-ascii': {
                readonly length: 32;
            };
        };
        readonly access: "variable";
    }, {
        readonly name: "token-symbol";
        readonly type: {
            readonly 'string-ascii': {
                readonly length: 10;
            };
        };
        readonly access: "variable";
    }, {
        readonly name: "token-uri";
        readonly type: {
            readonly optional: {
                readonly 'string-utf8': {
                    readonly length: 256;
                };
            };
        };
        readonly access: "variable";
    }];
    readonly maps: readonly [{
        readonly name: "approved-contracts";
        readonly key: "principal";
        readonly value: "bool";
    }];
    readonly fungible_tokens: readonly [];
    readonly non_fungible_tokens: readonly [];
    readonly epoch: "Epoch24";
    readonly clarity_version: "Clarity2";
};
export default _default;
//# sourceMappingURL=brc20-token.d.ts.map