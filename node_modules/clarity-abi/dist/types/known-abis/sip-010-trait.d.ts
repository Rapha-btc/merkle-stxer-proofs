declare const _default: {
    readonly functions: readonly [{
        readonly name: "burn";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "sender";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "burn-fixed";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "sender";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "mint";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "recipient";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "mint-fixed";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "recipient";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "transfer";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "sender";
            readonly type: "principal";
        }, {
            readonly name: "recipient";
            readonly type: "principal";
        }, {
            readonly name: "memo";
            readonly type: {
                readonly optional: {
                    readonly buffer: {
                        readonly length: 34;
                    };
                };
            };
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "transfer-fixed";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "amount";
            readonly type: "uint128";
        }, {
            readonly name: "sender";
            readonly type: "principal";
        }, {
            readonly name: "recipient";
            readonly type: "principal";
        }, {
            readonly name: "memo";
            readonly type: {
                readonly optional: {
                    readonly buffer: {
                        readonly length: 34;
                    };
                };
            };
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "get-balance";
        readonly access: "read_only";
        readonly args: readonly [{
            readonly name: "who";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-balance-fixed";
        readonly access: "read_only";
        readonly args: readonly [{
            readonly name: "account";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-decimals";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-name";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: {
                        readonly 'string-ascii': {
                            readonly length: 32;
                        };
                    };
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-symbol";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: {
                        readonly 'string-ascii': {
                            readonly length: 10;
                        };
                    };
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-token-uri";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: {
                        readonly optional: {
                            readonly 'string-utf8': {
                                readonly length: 256;
                            };
                        };
                    };
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-total-supply";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "none";
                };
            };
        };
    }, {
        readonly name: "get-total-supply-fixed";
        readonly access: "read_only";
        readonly args: readonly [];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "none";
                };
            };
        };
    }];
    readonly variables: readonly [];
    readonly maps: readonly [];
    readonly fungible_tokens: readonly [];
    readonly non_fungible_tokens: readonly [];
    readonly epoch: "Epoch2_05";
    readonly clarity_version: "Clarity1";
};
export default _default;
//# sourceMappingURL=sip-010-trait.d.ts.map