declare const _default: {
    readonly functions: readonly [{
        readonly name: "end-proposal";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "proposal-id";
            readonly type: "uint128";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "propose";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "expiry";
            readonly type: "uint128";
        }, {
            readonly name: "start-block-height";
            readonly type: "uint128";
        }, {
            readonly name: "title";
            readonly type: {
                readonly 'string-utf8': {
                    readonly length: 256;
                };
            };
        }, {
            readonly name: "url";
            readonly type: {
                readonly 'string-utf8': {
                    readonly length: 256;
                };
            };
        }, {
            readonly name: "new-fee-rate-x";
            readonly type: "uint128";
        }, {
            readonly name: "new-fee-rate-y";
            readonly type: "uint128";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "return-votes-to-member";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "token";
            readonly type: "trait_reference";
        }, {
            readonly name: "proposal-id";
            readonly type: "uint128";
        }, {
            readonly name: "member";
            readonly type: "principal";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "bool";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "vote-against";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "token";
            readonly type: "trait_reference";
        }, {
            readonly name: "proposal-id";
            readonly type: "uint128";
        }, {
            readonly name: "amount";
            readonly type: "uint128";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "uint128";
                };
            };
        };
    }, {
        readonly name: "vote-for";
        readonly access: "public";
        readonly args: readonly [{
            readonly name: "token";
            readonly type: "trait_reference";
        }, {
            readonly name: "proposal-id";
            readonly type: "uint128";
        }, {
            readonly name: "amount";
            readonly type: "uint128";
        }];
        readonly outputs: {
            readonly type: {
                readonly response: {
                    readonly ok: "uint128";
                    readonly error: "uint128";
                };
            };
        };
    }];
    readonly variables: readonly [];
    readonly maps: readonly [];
    readonly fungible_tokens: readonly [];
    readonly non_fungible_tokens: readonly [];
    readonly epoch: "Epoch2_05";
    readonly clarity_version: "Clarity1";
};
export default _default;
//# sourceMappingURL=multisig-vote-sft-trait.d.ts.map